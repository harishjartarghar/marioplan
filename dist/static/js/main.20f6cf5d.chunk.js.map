{"version":3,"sources":["components/layout/SignedIn.js","redux/actions/authActions.js","components/layout/SignedOut.js","components/layout/NavBar.js","components/dashboard/Notifcation.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/signIn.js","components/auth/signUp.js","components/project/CreateProject.js","redux/actions/projectActions.js","App.js","serviceWorker.js","redux/reducers/authReducers.js","redux/reducers/projectReducers.js","redux/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignOutLinks","state","firebase","links","uid","SignedIn","SignedOut","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","DashBoard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","console","log","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","noValidate","NewUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","signUp","CreateProject","createProject","history","push","add","authorId","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authReducers","actions","message","projectReducers","rootReducers","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbconfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.20f6cf5d.chunk.js","sourcesContent":["import React, { Profiler } from 'react';\nimport {NavLink} from 'react-router-dom'\nimport { signOut } from '../../redux/actions/authActions';\nimport { connect } from 'react-redux';\n\nconst SignInLinks=(props)=>{\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <ul className=\"right\">\n                    <li><NavLink to=\"/create\">New Project</NavLink></li>\n                    <li><a  onClick={props.signOut}>LogOut</a></li>\n                    <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n                </ul>\n            </div>\n        </nav>\n      );\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return {\n        signOut:()=>{dispatch(signOut())}\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignInLinks);\n","export const signIn=(credentials)=>{\n    return (dispatch,getState,{getFirebase})=>{\n        const firebase=getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({type:'LOGIN_SUCCESS'});\n        }).catch(err=>{\n            dispatch({type:'LOGIN_ERROR',err});\n        })\n    }\n}\n\nexport const signOut=()=>{\n    return (dispatch,getState,{getFirebase})=>{\n        const firebase=getFirebase();\n        firebase.auth().signOut().then(()=>{\n            dispatch({type:'SIGNOUT'});\n        })\n    }\n}\n\nexport const signUp=(NewUser)=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        const firebase=getFirebase();\n        const firestore=getFirestore();\n        \n        firebase.auth().createUserWithEmailAndPassword(\n            NewUser.email,\n            NewUser.password\n        ).then(resp=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName:NewUser.firstName,\n                lastName:NewUser.lastName,\n                initials:NewUser.firstName[0]+NewUser.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({type:'SIGNUP_SUCCESS'})\n        }).catch((err)=>{\n            dispatch({type:'SIGNUP_ERROR',err})\n        })\n    }\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nconst SignOutLinks=()=>{\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <ul className=\"right\">\n                    <li><NavLink to=\"/signup\">Signup</NavLink></li>\n                    <li><NavLink to=\"/signin\">Login</NavLink></li>\n                </ul>\n            </div>\n        </nav>\n      );\n}\n\n\nexport default SignOutLinks;\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport SignedInLinks from './SignedIn';\nimport SignedOutLinks from './SignedOut';\nimport {connect} from 'react-redux';\n\nconst NavBar=(props)=>{\n    const {auth, profile}=props;\n    const links=auth.uid?<SignedInLinks profile={profile}/>:<SignedOutLinks/>;\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div>\n                <div className=\"container\">\n                    <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\n                </div>\n                <div className=\"container-fluid\">\n                    {links}\n                </div>\n            </div>\n        </nav>\n      );\n}\n\nconst mapStatetoProps=(state)=>{\n    return{\n        auth: state.firebase.auth,\n        profile:state.firebase.profile\n    }\n  }\n\nexport default connect(mapStatetoProps)(NavBar);\n","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React from 'react';\nimport moment from 'moment';\n\n\nconst ProjectSummary=({project})=>{\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>{project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n      );\n}\n\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\n\nconst ProjectList=({projects})=>{\n    return (\n            <div className=\"project-list section\">\n                {projects && projects.map(project=>{\n                   return (\n                        <Link to={\"/project/\"+project.id} key={project.id}>\n                            <ProjectSummary project={project}/>\n                        </Link>\n                   );\n                })}\n            </div>\n      );\n}\n\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport Notfication from './Notifcation';\nimport ProjectList from '../project/ProjectList';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nclass DashBoard extends Component {\n\n  render()\n  {const {projects,auth,notifications}=this.props;\n\n  if(!auth.uid) return  <Redirect to=\"/signin\"/>\n    return (\n      \n      <div className=\"dashboard container\">\n          <div className=\"row\">\n              <div className=\"col s12 m6\">\n                <ProjectList projects={projects}/>\n              </div>\n              <div className=\"col s12 m5 offset-m1\">\n                <Notfication notifications={notifications}/>\n              </div>\n          </div>\n      </div>\n    );\n  }\n\n\n}\nconst mapStatetoProps=(state)=>{\n  return{\n    projects:state.firestore.ordered.projects,\n    auth:state.firebase.auth,\n    notifications:state.firestore.ordered.notifications,\n\n  }\n}\n\n\nexport default compose(\n  connect(mapStatetoProps,null),\n  firestoreConnect([\n    {collection:'projects',orderBy:['createdAt','desc']},\n    {collection:'notifications',limit:3, orderBy:['time','desc']}\n  ])\n)(DashBoard);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\n\nconst ProjectDetails=(props)=>{\n    const {auth}=props;\n\n    if(!auth.uid) return  <Redirect to=\"/signin\"/>\n    if(props.project)\n    {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0 \">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">Project Title - {props.project.title}</span>\n                        <p>{props.project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {props.project.authorFirstName} {props.project.authorLastName}</div>\n                        <div>{moment(props.project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>  \n            </div>\n          );\n    }\n    else{\n        return(\n        <div className=\"center\">\n            <h4>Loading...</h4>\n        </div>\n        );\n    }\n}\n\nconst mapStatetoProps=(state,ownProps)=>{\n    console.log(state);\n    const id=ownProps.match.params.id;\n    const projects=state.firestore.data.projects;\n    const project=projects?projects[id]:null;\n    return{\n      project:project,\n      auth:state.firebase.auth\n    }\n  }\n\nexport default compose(\n    connect(mapStatetoProps,null),\n    firestoreConnect([{\n        collection:'projects'\n    }])\n)(ProjectDetails);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../redux/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n\n    state={\n        email:'',\n        password:''\n    }\n\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        });\n    }\n\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const {authError,auth}=this.props;\n        \n        if(auth.uid) return  <Redirect to=\"/\"/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <br/>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    </div>\n                    <div className=\"red-text center\">\n                        {authError?<p>{authError}</p>:null}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStatetoProps=(state)=>{\n    return{\n        auth:state.firebase.auth,\n        authError:state.auth.authError\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signIn:(credentials)=>{dispatch(signIn(credentials))}\n    }\n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(SignIn) ;\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../redux/actions/authActions';\n\n\nclass SignUp extends Component {\n\n    state={\n        email:'',\n        password:'',\n        firstName:'',\n        lastName:''\n    }\n\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        });\n    }\n\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.SignUp(this.state);\n    }\n    render() {\n        const {auth,authError}=this.props;\n        if(auth.uid) return  <Redirect to=\"/\"/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\" noValidate>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <br/>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\n                    </div>\n                    <div className=\"red-text center\">\n                        {authError?<p>{authError}</p>:null}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStatetoProps=(state)=>{\n    return{\n        auth:state.firebase.auth,\n        authError:state.auth.authError\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        SignUp:(NewUser)=>{dispatch(signUp(NewUser))}\n    }\n}\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(SignUp) ;\n\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux';\nimport {createProject} from '../../redux/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n\n    state={\n        title:'',\n        content:''\n    }\n\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        });\n    }\n\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        const {auth}=this.props;\n\n        if(!auth.uid) return  <Redirect to=\"/signin\"/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <br/>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                       <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create Project</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStatetoProps=(state)=>{\n    return{\n      auth:state.firebase.auth\n    }\n  }\n\nconst mapDispatchtoProps=(dispatch)=>{\n    return {\n        createProject:(project)=>dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStatetoProps,mapDispatchtoProps)(CreateProject);\n","export const createProject=(project)=>{\n    return (dispatch,getState,{getFirebase, getFirestore})=>{\n        const firestore=getFirestore();\n        const profile=getState().firebase.profile;\n        const uid=getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName:profile.firstName,\n            authorLastName:profile.lastName,\n            authorId:uid,\n            createdAt:new Date()\n        }).then(()=>{\n            dispatch({type:'CREATE_PROJECT',project});\n        }).catch(err=>{\n            dispatch({type:'CREATE_PROJECT_ERROR',err});\n        })\n        \n        \n    }\n\n}","import React, { Component } from 'react';\nimport {BrowserRouter,Switch,Route, Redirect} from 'react-router-dom'\nimport NavBar from './components/layout/NavBar';\nimport DashBoard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport SignIn from './components/auth/signIn';\nimport SignUp from './components/auth/signUp';\nimport CreateProject from './components/project/CreateProject';\n\n\nclass App extends Component {\n\n  render()\n  {\n    return (\n      <BrowserRouter>\n        <NavBar/>\n        <Switch>\n          <Route exact path=\"/\" component={DashBoard}/>\n          <Route path=\"/project/:id\" component={ProjectDetails}/>\n          <Route path=\"/signin\" component={SignIn}/>\n          <Route path=\"/signup\" component={SignUp}/>\n          <Route path=\"/create\" component={CreateProject}/>\n          <Redirect to=\"/\"/>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState={\n    authError:null\n}\n\nconst authReducers=(state={initialState},actions)=>{\n    switch(actions.type){\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return{\n                ...state,\n                authError:'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return{\n                ...state,\n                authError:null\n            }\n        case 'SIGNOUT':\n            console.log('signout succesfull');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup successfull');\n            return{\n                ...state,\n                authError:null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error',actions.err.message);\n            return{\n                ...state,\n                authError:actions.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducers;","const initialState={}\n\nconst projectReducers=(state=initialState,actions)=>{\n    switch(actions.type){\n        case 'CREATE_PROJECT':\n            console.log('project created', actions.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('error occured', actions.err);\n            return state;\n        default:\n            return state;\n        \n    }\n}\n\nexport default projectReducers;","import authReducers from './authReducers';\nimport projectReducers from './projectReducers';\nimport {combineReducers} from 'redux';\nimport {firestoreReducer} from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase';\n\nconst rootReducers=combineReducers({\n    auth:authReducers,\n    project:projectReducers,\n    firestore:firestoreReducer,\n    firebase:firebaseReducer\n});\n\nexport default rootReducers;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCCRAYf4c3T752iAlzckyPu39GUg4Joid4\",\n    authDomain: \"marioplan-2c072.firebaseapp.com\",\n    databaseURL: \"https://marioplan-2c072.firebaseio.com\",\n    projectId: \"marioplan-2c072\",\n    storageBucket: \"marioplan-2c072.appspot.com\",\n    messagingSenderId: \"726248164701\",\n    appId: \"1:726248164701:web:f4effa0a70d4c3ba66ecb4\",\n    measurementId: \"G-6ZT51XW1V1\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore();\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducers from './redux/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore,getFirestore} from 'redux-firestore';\nimport {reactReduxFirebase ,getFirebase} from 'react-redux-firebase';\nimport fbconfig from './config/fbconfig';\n\nconst store=createStore(rootReducers,\n  compose(\n  applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n  reduxFirestore(fbconfig),\n  reactReduxFirebase(fbconfig,{useFirestoreForProfile:true,userProfile:'users',attachAuthIsReady:true})\n));\n\n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}